name: Package Plugin

on:
    release:
        types:
            - published

jobs:
    deploy:
        name: On Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Setup Workflow Context
              id: workflow
              working-directory: ${{ runner.temp }}
              env:
                  REPO: ${{ github.repository }}
              run: |
                  mkdir dist
                  echo ::set-output name=DIST::${PWD}/dist
                  echo ::set-output name=PACKAGE::${REPO##*/}

            - name: PHP version
              run: php --version

            - name: Set Node.js 18.x
              uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
              with:
                  node-version: 18.x
                  cache: 'yarn'

            - name: Node version
              run: node --version

            - name: Enable yarn
              run: corepack enable

            - name: Install deps
              run: yarn install

            - name: Run build
              run: yarn run build

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache Composer vendor directory
              uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install PHP Dependencies
              run: composer install --no-progress --no-dev --optimize-autoloader

            - name: Prepare files
              run: rsync -r --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

            - name: List Files
              working-directory: ${{ steps.workflow.outputs.DIST }}
              run: find .

            - name: Create Zip
              working-directory: ${{ steps.workflow.outputs.DIST }}
              run: zip -r ${{ steps.workflow.outputs.PACKAGE }}.zip .

            - name: Upload Release Asset
              uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.21
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets{?name,label}
                  asset_path: ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}.zip
                  asset_name: ${{ steps.workflow.outputs.PACKAGE }}.zip
                  asset_content_type: application/zip
