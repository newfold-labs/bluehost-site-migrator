name: Cypress Tests

on:
    push:
        branches:
            - master
        paths-ignore:
            - '.github/**'
            - '.wporg/**'
            - '!.github/workflows/cypress.yml'
            - '.gitignore'
            - '**.md'
    pull_request:
        types: [opened, edited, synchronize, reopened, ready_for_review]
    pull_request_review:
        types: [submitted, edited]

jobs:
    test:
        name: Run Cypress Tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup workflow context
              id: workflow
              working-directory: ${{ runner.temp }}
              env:
                  REPO: ${{ github.repository }}
              run: |
                  mkdir dist
                  echo "DIST=${PWD}/dist" >> $GITHUB_OUTPUT
                  echo "PACKAGE=${REPO##*/}" >> $GITHUB_OUTPUT

            - name: Use Node.js 18.x
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  cache: 'yarn'

            - name: Get Composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache Composer vendor directory
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: PHP version
              run: php --version

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Install PHP Dependencies
              run: composer install --no-progress --no-dev --optimize-autoloader

            - name: Enable yarn
              run: corepack enable

            - name: Install Dependencies
              run: yarn install

            - name: Build JavaScript
              run: yarn run build

            - name: Create Distribution Copy
              run: rsync -r --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

            - name: List Distribution Files
              working-directory: ${{ steps.workflow.outputs.DIST }}
              run: find .

            - name: Configure WordPress
              run: echo '{"plugins":["${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}"]}' > .wp-env.override.json

            - name: Install WordPress
              run: yarn wp-env start

            - name: Run Cypress Tests
              run: yarn run test

            - name: Store screenshots of test failures
              if: ${{ failure() }}
              uses: actions/upload-artifact@v3
              with:
                  name: screenshots
                  path: ./tests/cypress/screenshots
